#!/usr/bin/python
#
# Copyright (c) 2015 Midokura SARL, All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import re
import os
import sys
import setup
import shutil
import socket
import subprocess
import tempfile

from charmhelpers.core import hookenv
from charmhelpers.core import host

import charmhelpers.fetch as fetch

def create_puppet_node_manifest():
    """
    Creates and returns the puppet node manifest as a string.
    """
    config = hookenv.config()

    hostname = subprocess.check_output(["hostname"])
    hostname = hostname.strip() 
    return """

node "%s" {
    midonet_repository::install {"%s":
    }
    ->
    midonet_repository::configure {"%s":
        username => "%s",
        password => "%s",
        midonet_flavor => "%s",
        midonet_version => "%s",
        midonet_openstack_plugin_version => "%s",
        os_release => "%s"
    }
}

""" % (
        hostname,
        hostname,
        hostname,
        config['username'],
        config['password'],
        config['midonet_flavor'],
        config['midonet_version'],
        config['midonet_openstack_plugin_version'],
        config['os_release']
    )

# this could make it into a general-purpose charm helper that will be available for all midonet charms
def run_puppet_node_manifest(manifest, modules, branch):
    """
    Run the manifest with the modules from github and a certain branch.
    """

    temp = tempfile.NamedTemporaryFile()
    temp.write(manifest)
    temp.seek(0)
    try:
        subprocess.check_output("""

set -e

NODE_MANIFEST="%s"

PUPPET_MODULE_URL="%s"

PUPPET_MODULE_BRANCH="%s"

TMPDIR="/tmp/midonet-charms/$(mktemp -d -u)"

mkdir -pv "${TMPDIR}"

cd "${TMPDIR}"

git clone "${PUPPET_MODULE_URL}" --branch "${PUPPET_MODULE_BRANCH}"

cd "${TMPDIR}/orizuru/puppet/modules"

puppet apply --verbose --debug --show_diff --modulepath=$(pwd) "${NODE_MANIFEST}"

cd

rm -rfv "${TMPDIR}"

sync

""" % (temp.name, modules, branch), shell=True)
    except subprocess.CalledProcessError:
        hookenv.log('Error applying the puppet module')
        sys.exit(1)

    temp.close()
    
    return

def install():
    hookenv.log('Installing midonet-repository')

    fetch.apt_update(fatal=True)
    fetch.apt_install(["puppet"], fatal=True)
    fetch.apt_install(["git"], fatal=True)

    config = hookenv.config()

    manifest = create_puppet_node_manifest()

    run_puppet_node_manifest(manifest, config['midonet_puppet_modules'], config['midonet_puppet_modules_branch'])

if __name__ == "__main__":
    install()
