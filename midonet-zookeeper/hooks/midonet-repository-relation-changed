#!/usr/bin/python
#
# Copyright (c) 2015 Midokura SARL, All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import re
import os
import sys
import setup
import shutil
import socket
import subprocess
import tempfile
import time

from charmhelpers.core import hookenv
from charmhelpers.core import host

def create_puppet_node_manifest():
    """
    Creates and returns the puppet node manifest as a string.
    """
    # the first cluster node myst have my_id 1
    zkid = 1
    myid = 0
    zkhosts = []
    config = hookenv.config()
    host_name =  subprocess.check_output("hostname", shell=True)
    host_name = host_name.strip()
    host_ip = socket.gethostbyname(host_name.strip())
    hostips = config['zookeeper_hosts']
    ips = list(hostips.split(' '))
    for ip in sorted(ips):
        zkhosts.append("%s:2888:3888" %str(ip))
        if (ip == host_ip):
            myid = zkid
        zkid = zkid + 1

    return """

node "%s" {
    hadoop-zookeeper::install {"%s":
    }
    ->
    hadoop-zookeeper::configure {"%s":
        myid => "%d",
        ensemble => %s
    }
    ->
    hadoop-zookeeper::start {"%s":
    }
}
""" % (
        host_name,
        host_name,
        host_name,
        myid,
        zkhosts,
        host_name
      )

def run_puppet_node_manifest(manifest, modules, branch):
    """
    Run the manifest with the modules from github and a certain branch.
    """
    
    temp = tempfile.NamedTemporaryFile()

    temp.write(manifest)
    
    temp.seek(0)

    try:
        subprocess.check_output("""

set -e

NODE_MANIFEST="%s"

PUPPET_MODULE_URL="%s"

PUPPET_MODULE_BRANCH="%s"

TMPDIR="/tmp/midonet-charms/$(mktemp -d -u)"

mkdir -pv "${TMPDIR}"

cd "${TMPDIR}"

git clone "${PUPPET_MODULE_URL}" --branch "${PUPPET_MODULE_BRANCH}"

cd "${TMPDIR}/orizuru/puppet/modules"

puppet apply --verbose --debug --show_diff --modulepath=$(pwd) "${NODE_MANIFEST}"

cd

rm -rfv "${TMPDIR}"

sync

""" % (temp.name, modules, branch), shell=True)
    except subprocess.CalledProcessError:
        hookenv.log('Error applying the puppet module')
        sys.exit(1)

    temp.close()

    return

def install():
    hookenv.log('Installing midonet-zookeeper')
 
    config = hookenv.config()

    manifest = create_puppet_node_manifest()
    
    time.sleep(30)
   
    run_puppet_node_manifest(manifest, config['midonet_puppet_modules'], config['midonet_puppet_modules_branch'])

if __name__ == "__main__":
    install()
